{"version":3,"sources":["store/actionType.js","store/reducer.js","store/index.js","components/Search/Search.js","components/Header/Header.js","context.js","commonComponents/ListItem/ListItem.js","store/actionCreators.js","commonComponents/List/List.js","components/List/TodoList.js","components/List/DidList.js","components/EditPanel/EditPanel.js","components/List/ListPanel.js","components/AddBtn/AddBtn.js","components/TodoListPanel/TodoListPanel.js","index.js"],"names":["INIT_LIST_VALUE","ADD_TODO_ITEM","DELETE_TODO_ITEM","COMPLETE_TODO_ITEM","EDIT_TODO_ITEM","defaultState","list","DeepClone","obj","objClone","Array","isArray","key","hasOwnProperty","reducer","state","action","type","newState","push","content","time","dateString","status","splice","index","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","onSearch","value","getState","str","filter","item","indexOf","forEach","notification","open","message","description","map","onClick","console","log","openNotification","SearchInput","props","placeholder","allowClear","enterButton","size","HeaderTop","style","display","flexDirection","alignItems","justifyContent","marginTop","count","Context","createContext","ItemList","handleEdit","useContext","Item","actions","title","shape","icon","EditOutlined","DeleteOutlined","handleDelete","className","checked","itemStyle","handleClick","actionCreators","getInitListValueAction","getAddTodoItemAction","getDeleteTodoItemAction","getCompleteTodoItemAction","getEditTodoItemAction","MyList","dispatch","useDispatch","width","header","bordered","dataSource","renderItem","ListItem","TodoList","component","length","List","DidList","textDecoration","EditPanel","useState","inputValue","setInputValue","setTime","textarea","useRef","useEffect","current","focus","isShow","TextArea","ref","autoSize","onChange","e","target","showTime","moment","flag","alert","onOk","setShow","ListPanel","setIsShow","setContent","Provider","todoList","didList","AddBtn","isAdd","setIsAdd","alignItem","TodoListPanel","useSelector","localStorage","JSON","parse","getItem","setItem","stringify","indexList","Object","assign","Header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.806838c6.chunk.js","sourcesContent":["export const INIT_LIST_VALUE = 'init_list_value';\r\nexport const ADD_TODO_ITEM = 'add_todo_item';\r\nexport const DELETE_TODO_ITEM = 'delete_todo_item';\r\nexport const COMPLETE_TODO_ITEM = 'complete_todo_item';\r\nexport const EDIT_TODO_ITEM = 'edit_todo_item';\r\n","import {ADD_TODO_ITEM, COMPLETE_TODO_ITEM, DELETE_TODO_ITEM, INIT_LIST_VALUE, EDIT_TODO_ITEM} from './actionType'\r\n\r\nconst defaultState = {\r\n  list: []\r\n}\r\n\r\n\r\nconst reducer = (state = defaultState, action) => {\r\n  if (action.type === INIT_LIST_VALUE) {\r\n    const newState = DeepClone(state);\r\n    newState.list = action.list;\r\n    return newState;\r\n  }\r\n  if (action.type === ADD_TODO_ITEM) {\r\n    const newState = DeepClone(state);\r\n    newState.list.push({\r\n      content: action.content,\r\n      time: action.dateString,\r\n      status: 0\r\n    })\r\n    return newState;\r\n  }\r\n  if (action.type === DELETE_TODO_ITEM) {\r\n    const newState = DeepClone(state);\r\n    newState.list.splice(action.index, 1);\r\n    return newState;\r\n  }\r\n  if (action.type === COMPLETE_TODO_ITEM) {\r\n    const newState = DeepClone(state);\r\n    newState.list[action.index].status = newState.list[action.index].status ? 0 : 1;\r\n    return newState;\r\n  }\r\n  if (action.type === EDIT_TODO_ITEM) {\r\n    const newState = DeepClone(state);\r\n    let status = newState.list[action.index].status;\r\n    newState.list.splice(action.index, 1);\r\n    newState.list.push({\r\n      content: action.content,\r\n      time: action.dateString,\r\n      status: status\r\n    });\r\n    return newState;\r\n  }\r\n  return state;\r\n};\r\n\r\n// const handleAction = {\r\n//   [INIT_LIST_VALUE]() \r\n// }\r\n\r\nfunction DeepClone(obj) {\r\n  // return JSON.parse(JSON.stringify(obj));\r\n  let objClone = Array.isArray(obj) ? [] : {};\r\n  if (obj && typeof obj === 'object') { //数组与Obj 都是 object\r\n    for (const key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        if (obj[key] && typeof obj[key] === 'object') {\r\n          objClone[key] = DeepClone(obj[key]);\r\n        } else {\r\n          objClone[key] = obj[key];\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return objClone;\r\n}\r\n\r\nexport default reducer;","import {createStore} from 'redux';\r\nimport reducer from './reducer.js';\r\nconst store = createStore(\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n\r\nexport default store;","import React, { Fragment } from 'react';\r\nimport Search from 'antd/lib/input/Search';\r\nimport './style.css'\r\nimport store from '@store/';\r\nimport { notification } from 'antd';\r\n\r\nconst openNotification = (value) => {\r\n  notification.open({\r\n    message: '搜索结果',\r\n    description: \r\n    \r\n    <Fragment>\r\n      {\r\n        value.map((item, index)=>(<div key={index}>{item}</div>))\r\n      }\r\n    </Fragment>,\r\n    onClick: () => {\r\n      console.log('Notification Clicked!');\r\n    },\r\n  });\r\n};\r\n\r\nconst onSearch = value => {\r\n  if (value === '') {\r\n    return;\r\n  }\r\n  let state = store.getState();\r\n  let str = [];\r\n  state.list.filter((item)=> {\r\n    return item.content.indexOf(value) !== -1\r\n  }).forEach((item)=> {\r\n    str.push(`${item.content} ${item.time} ${item.status ? '已完成' : '未完成'}`);\r\n  });\r\n  openNotification(str);\r\n};\r\n\r\nconst SearchInput = (props) => {\r\n  return (\r\n    <div>\r\n      <Search\r\n        placeholder=\"input search text\"\r\n        allowClear\r\n        enterButton=\"Search\"\r\n        size=\"large\"\r\n        onSearch={onSearch}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchInput;","import React from 'react';\r\nimport Search from '@components/Search/Search.js'\r\n\r\nfunction HeaderTop(props) {\r\n  return (\r\n    <div style={{display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: 'space-evenly'}}>\r\n      <h1 style={{marginTop: '10px'}}>待办事项: {props.count}</h1>\r\n      <Search />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderTop;\r\n","import { createContext } from 'react';\r\n\r\nconst Context = createContext(null);\r\n\r\nexport default Context;","import React, { useContext } from 'react';\r\nimport {List, Tooltip, Button, Checkbox} from 'antd';\r\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\r\nimport Context from '@/context.js'\r\n/* \r\n  @params {\r\n    content: string,\r\n    time: string,\r\n    index: number,\r\n    itemStyle: object,\r\n    handleClick: function,\r\n    handleEdit: function,\r\n    handleDelete: function\r\n  }\r\n*/\r\n\r\n\r\nconst ItemList = (props) => {\r\n  const handleEdit = useContext(Context);\r\n  // console.log(handleEdit)\r\n  return (\r\n    <List.Item\r\n      actions={\r\n        [\r\n          <div>{props.time}</div>,\r\n          <Tooltip title=\"edit\">\r\n            <Button \r\n              type=\"primary\" \r\n              shape=\"circle\" \r\n              icon={<EditOutlined />} \r\n              onClick={()=>handleEdit(props.content, props.time, props.index)}\r\n            />\r\n          </Tooltip>,\r\n          <Tooltip title=\"delete\">\r\n            <Button type=\"primary\" shape=\"circle\" icon={<DeleteOutlined />} onClick={()=>{props.handleDelete(props.index)}}/>\r\n          </Tooltip>,\r\n        ]\r\n      }\r\n    >\r\n      <Checkbox \r\n        className=\"textShow\" \r\n        checked={props.checked} \r\n        style={props.itemStyle}\r\n        onClick={()=>{props.handleClick(props.index)}}\r\n      >\r\n        {props.content}\r\n      </Checkbox>\r\n    </List.Item>\r\n  )\r\n}\r\n\r\nexport default ItemList;","import {ADD_TODO_ITEM, COMPLETE_TODO_ITEM, DELETE_TODO_ITEM, EDIT_TODO_ITEM, INIT_LIST_VALUE} from './actionType';\r\n\r\nconst actionCreators = {\r\n  getInitListValueAction(list) {\r\n    return {\r\n      type: INIT_LIST_VALUE,\r\n      list\r\n    }\r\n  },\r\n  getAddTodoItemAction(content, dateString) {\r\n    return {\r\n      type: ADD_TODO_ITEM,\r\n      content,\r\n      dateString\r\n    }\r\n  },\r\n  getDeleteTodoItemAction(index) {\r\n    return {\r\n      type: DELETE_TODO_ITEM,\r\n      index\r\n    }\r\n  },\r\n  getCompleteTodoItemAction(index) {\r\n    return {\r\n      type: COMPLETE_TODO_ITEM,\r\n      index\r\n    }\r\n  },\r\n  getEditTodoItemAction(index, content, dateString) {\r\n    return {\r\n      type: EDIT_TODO_ITEM,\r\n      index, content, dateString\r\n    }\r\n  }\r\n}\r\n\r\nexport default actionCreators;","import { List } from 'antd'\r\nimport ListItem from '@common/ListItem/ListItem.js'\r\nimport actionCreators from '@store/actionCreators'\r\nimport { useDispatch } from 'react-redux';\r\n\r\n/*\r\n @param {\r\n   title,\r\n   list,\r\n   status\r\n }\r\n*/\r\n\r\nconst MyList = (props) => {\r\n  const dispatch = useDispatch()\r\n  return (\r\n    <div style={{width: '100%', display: 'flex', alignItems:'center', justifyContent:'center'}}>\r\n      <List\r\n        header={<h2>{props.title}</h2>}\r\n        style={{marginTop: '10px', width: '100%'}}\r\n        bordered\r\n        dataSource={props.list}\r\n        renderItem={(item) => (\r\n          <ListItem \r\n            itemStyle={props.itemStyle} \r\n            content={item.content} \r\n            time={item.time} \r\n            checked={props.checked} \r\n            index={item.index}\r\n            handleEdit={handleEdit}\r\n            handleDelete={handleDelete}\r\n            handleClick={handleClick}\r\n          />\r\n        )}\r\n      />\r\n    </div>\r\n  );\r\n  function handleEdit() {\r\n\r\n  }\r\n  function handleClick(index) {\r\n    dispatch(actionCreators.getCompleteTodoItemAction(index));\r\n  }\r\n  function handleDelete(index) {\r\n    dispatch(actionCreators.getDeleteTodoItemAction(index));\r\n  }\r\n}\r\n\r\nexport default MyList;","import List from '@common/List/List.js';\r\nimport { Fragment } from 'react';\r\n\r\nconst TodoList = (props) => {\r\n  const component = props.list.length > 0 ? (\r\n    <List \r\n      title=\"待办事项\"\r\n      list={props.list}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <Fragment>\r\n      {component}\r\n    </Fragment>\r\n  )\r\n}\r\nexport default TodoList;","import List from '@common/List/List.js';\r\nimport { Fragment } from 'react';\r\n\r\nconst DidList = (props) => {\r\n  const component = props.list.length > 0 ? (\r\n    <List \r\n      title=\"已完成事项\"\r\n      list={props.list}\r\n      itemStyle={{textDecoration: 'line-through'}}\r\n      checked={true}\r\n    />\r\n  ) : null;\r\n  return (\r\n    <Fragment>\r\n      {component}\r\n    </Fragment>\r\n  )\r\n}\r\nexport default DidList;","import { Fragment, useEffect, useRef, useState } from 'react';\r\nimport {Input, Button, DatePicker} from 'antd';\r\nimport moment from 'moment'\r\nimport './style.css'\r\n\r\n/*\r\n  @params {\r\n    title: string,\r\n    content: string,\r\n    time: string,\r\n    isSHow: boolean,\r\n    setShow: function,\r\n    onOk: function\r\n  }\r\n*/\r\n\r\nconst EditPanel = (props) => {\r\n  const [inputValue, setInputValue] = useState(props.content || '');\r\n  const [time, setTime] = useState(props.time || '');\r\n  const textarea = useRef();\r\n\r\n  useEffect(()=>{\r\n    if (textarea.current) {\r\n      let input = textarea.current;\r\n      input.focus();\r\n      // input.setSelectionRage(0,inputValue.length);\r\n      // 设置光标位置失败\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Fragment>\r\n      {\r\n        props.isShow \r\n        ? (\r\n          <div className=\"Panel\">\r\n            <div className=\"EditPanel\">\r\n              <h1>{props.title}</h1>\r\n              <Input.TextArea\r\n                ref={textarea}\r\n                autoSize\r\n                onChange={handleInputChange}\r\n                placeholder=\"请输入Item\"\r\n                value={inputValue}\r\n              />\r\n              <div>\r\n                <DatePicker \r\n                  showTime \r\n                  value={time === '' ? '' : moment(time)}\r\n                  onChange={handleDateChange}\r\n                />\r\n                <Button onClick={handleSave}>保存</Button>\r\n                <Button onClick={props.setShow}>退出</Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )\r\n        : null\r\n      }\r\n    </Fragment>\r\n  )\r\n  function handleSave() {\r\n    let flag = true;\r\n    if (inputValue === '') {\r\n      flag = false;\r\n      alert('事项不能为空');\r\n    }\r\n    if (time === '') {\r\n      flag = false;\r\n      alert('日期不能为空');\r\n    }\r\n    if (flag) {\r\n      setInputValue('');\r\n      setTime('')\r\n      props.onOk(inputValue, time);\r\n    }\r\n  }\r\n  function handleInputChange(e) {\r\n    setInputValue(e.target.value);\r\n  }\r\n  function handleDateChange(moment, dateString) {\r\n    setTime(dateString);\r\n  }\r\n}\r\n\r\nexport default EditPanel;","import React from 'react'\r\nimport TodoList from '@components/List/TodoList.js';\r\nimport DidList from '@components/List/DidList.js';\r\nimport EditPanel from '@components/EditPanel/EditPanel.js'\r\nimport actionCreators from '@store/actionCreators'\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Context from '@/context.js'\r\n\r\nconst ListPanel = (props) => {\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [content, setContent] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Context.Provider\r\n      value={handleEdit}\r\n    >\r\n      <EditPanel \r\n        title={\"编辑项目\"}\r\n        isShow={isShow}\r\n        content={content}\r\n        time={time}\r\n        setShow={()=>setIsShow(false)}\r\n        onOk={handleOk}\r\n      />\r\n      <TodoList\r\n        list={props.todoList}\r\n      />\r\n      <DidList\r\n        list={props.didList}\r\n      />\r\n    </Context.Provider>      \r\n  )\r\n  function handleEdit(content, time) {\r\n    setContent(content);\r\n    setTime(time);\r\n    setIsShow(true);\r\n  }\r\n  function handleOk(inputValue, time, index) {\r\n    dispatch(actionCreators.getEditTodoItemAction(inputValue, time));\r\n    setIsShow(false);\r\n  }\r\n}\r\nexport default ListPanel;","import { useState } from 'react';\r\nimport EditPanel from '@components/EditPanel/EditPanel.js'\r\nimport './style.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport actionCreators from '@store/actionCreators';\r\n\r\nconst AddBtn = (props) => {\r\n\r\n  // const [inputValue, setInputValue] = useState('');\r\n  const [isAdd, setIsAdd] = useState(false)\r\n  const dispatch = useDispatch();\r\n  // console.log(isAdd)\r\n  return (\r\n    <div style={{display: 'flex', alignItem: 'center', justifyContent: 'flex-start'}}>\r\n      <div \r\n        className=\"newItemBtn\"\r\n        onClick={()=>setIsAdd(true)}\r\n      >\r\n        +新建待办\r\n      </div>\r\n      <EditPanel \r\n        title={\"添加事项\"}\r\n        isShow={isAdd} \r\n        setShow={()=>setIsAdd(false)}\r\n        onOk={handleOk}\r\n      />\r\n    </div>\r\n  );\r\n  function handleOk(inputValue, time) {\r\n    dispatch(actionCreators.getAddTodoItemAction(inputValue, time));\r\n    setIsAdd(false);\r\n  }\r\n}\r\n\r\nexport default AddBtn;","import Header from '@components/Header/Header.js'\r\nimport ListPanel from '@components/List/ListPanel.js'\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actionCreators from '@store/actionCreators'\r\nimport './style.css'\r\nimport AddBtn from '../AddBtn/AddBtn';\r\n\r\nconst TodoListPanel = (props) => {\r\n  \r\n  const {list} = useSelector(state => state)\r\n  const dispatch = useDispatch();\r\n\r\n  // 初始化store\r\n  useEffect(()=>{\r\n    dispatch(actionCreators.getInitListValueAction(\r\n      (window.localStorage \r\n        ? (JSON.parse(window.localStorage.getItem('list')) || []) \r\n        : ()=>{alert('你的浏览器不支持localStorage'); return [];}\r\n      )\r\n      // [\r\n      //   {\r\n      //     content: '好好吃饭',\r\n      //     time: '2020-10-20 14:24:22',\r\n      //     status: 0\r\n      //   },\r\n      //   {\r\n      //     content: '不好好吃饭',\r\n      //     time: '2020-10-20 14:22:22',\r\n      //     status: 1\r\n      //   }\r\n      // ]\r\n    ))\r\n  }, [dispatch]); //采用dispatch, 不变, 仅在初次渲染执行, 防止循环渲染\r\n\r\n  // 存储store 变化 => 修改list\r\n  useEffect(()=> {\r\n    if(window.localStorage){\r\n      window.localStorage.setItem('list', JSON.stringify(list));\r\n    }\r\n  })\r\n  \r\n  // 为每个item 设置id; item不存在对象属性, 故采用浅拷贝\r\n  const indexList = list\r\n    .map((item, index) => Object.assign({index: index}, item));\r\n  \r\n  // // 转化不同的item (待办事项, 已完成事项)\r\n  let todoList = indexList.filter((item)=> (item.status === 0));\r\n  let didList = indexList.filter((item)=> (item.status === 1));\r\n\r\n  return (\r\n    <div className=\"todoListPanel\" >\r\n      <Header count={todoList.length}/>\r\n      <AddBtn/>\r\n      <ListPanel\r\n        todoList={todoList}\r\n        didList={didList}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TodoListPanel;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport TodoListPanel from '@components/TodoListPanel/TodoListPanel.js';\nimport store from '@/store'\nimport './style.css';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <TodoListPanel />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}